grammar org.eclipse.recommenders.snipeditor.SnipDSL with org.eclipse.xtext.xbase.Xbase
import 'http://www.eclipse.org/xtext/xbase/Xbase' as xbase
generate snipDSL "http://www.eclipse.org/recommenders/snipeditor/SnipDSL"

domainmodel:
	importSection += (importDeclare)?
	elements += abstractElement*;

importDeclare:
	'${import}' name = (QualifiedNameWithWildcard | QualifiedName)
;


abstractElement:
	packageDeclare | entity | attribute | method
;

packageDeclare:
	'package' name = QualifiedName '{'
	(elements += abstractElement)*
	'}'
;


entity:
	(visibility=Visibility)? 'class' name = ValidID 
		('extends' superType=JvmTypeReference )?
	'{'
		features += feature*
	'}'
;

feature:
	attribute | method
;


parameter :
	parameterType=JvmTypeReference  name = myID;


method:
	(visibility=Visibility)? 'static'? jType = JvmTypeReference
	name=ValidID'('(params+=parameter
		(','params+=parameter)*)?')'
	body=BlockExpression
;



attribute:
	(visible=Visibility)? 'static'? jType = JvmTypeReference
	 name = myID
;
 myID:
 	'${' ValidID '}'
 ;

BlockExpression returns xbase::XExpression:
	myBlockExpression | XExpressionInsideBlock;

myBlockExpression:
	{myBlockExpression}
	'{'
		(expressions+=feature ';'?)*
	'}'
;


enum Visibility:
	 protected | public | private
;



